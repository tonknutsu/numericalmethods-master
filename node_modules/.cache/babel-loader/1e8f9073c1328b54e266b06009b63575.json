{"ast":null,"code":"var _jsxFileName = \"/Users/nadol/Desktop/reactjs/my-app/src/FWOH.js\";\nimport React from 'react';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport * as math from 'mathjs';\nimport Plot from 'react-plotly.js';\nimport { LineChart } from 'recharts';\nvar X, Y;\n\nclass FWOH extends React.Component {\n  constructor(props) {\n    super(props);\n    X = [];\n    Y = [];\n    this.state = {\n      diffx: \"\",\n      xh: \"\",\n      equation: \"\",\n      submitted: true\n    }; //ประกาศตัวแปร xl xr และ equation\n\n    this.handleSubmit = this.handleSubmit.bind(this); //ประกาศฟังก์ชัน handleSubmit\n\n    this.handleChange = this.handleChange.bind(this); //ประกาศฟังก์ชัน handleChange\n\n    this.FWOH = this.FWOH.bind(this); //ประกาศฟังก์ชัน FalsePositionMethod\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    }); //ทำการเซตค่า xl xr equation ใหม่ให้เป็นไปตามที่ผู้ใช้กรอก\n\n    this.setState({\n      submitted: true\n    });\n    this.setState({\n      Arr: []\n    });\n  }\n\n  handleSubmit(event) {\n    let str = this.state.equation; //ให้ str = equation (สมการที่รับมา)\n\n    let c = 0;\n\n    for (let i = 0; i < str.length; i++) {\n      //เข้าลูปเช็คว่ามี x หรือ X หรือไม่ (ดูว่าที่กรอกมาเป็นสมการหรือเปล่า)\n      if (str[i] === \"x\" || str[i] === \"X\") {\n        c++;\n      }\n    }\n\n    if (str.length !== 0 && c !== 0 && this.state.submitted && this.state.xl !== \"\" && this.state.xr !== \"\") {\n      //เช็คความยาวสมการต้องไม่เท่ากับ 0 และ c ที่เช็ค x ต้องไม่เท่ากับ 0 และ xl xr ต้องไม่ใช่ค่าว่าง\n      this.FalsePositionMethod(); //ส่งไปที่ฟังก์ชัน FalsePositionMethod\n\n      this.setState({\n        submitted: false\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  FalsePositionMethod(event) {\n    X = [];\n    Y = [];\n\n    var func = x => {\n      //ฟังก์ชันย่อยรับค่ามาแล้วส่งไปแทนในสมการ\n      let scope = {\n        x: x\n      };\n      let code = math.compile(this.state.equation); //ทำการกระจายสมการ\n\n      return code.eval(scope); //เอาค่าไปแทนในสมการแล้วรีเทิร์น\n    };\n\n    var err = (x0, x1) => {\n      return Math.abs((x1 - x0) / x1) * 100;\n    }; //ฟังก์ชันย่อยหาเออเร่อ\n\n\n    var arr;\n    var data = {\n      xl: 0,\n      xr: 0,\n      xm: 0,\n      err: \"\",\n      fxl: 0,\n      fxr: 0,\n      fxm: 0,\n      count: 1\n    }; //ให้ดาต้าเริ่มต้นเป็น 0 ทั้งหมด\n\n    var t = true;\n    var xOld = 0;\n    data.xl = parseFloat(this.state.xl); //ให้ xl ในดาต้าเท่ากับ xl ที่รับเข้ามาตอนกรอก\n\n    data.xr = parseFloat(this.state.xr); //ให้ xr ในดาต้าเท่ากับ xr ที่รับเข้ามาตอนกรอก\n\n    while (t) {\n      data.xm = data.xr - (func(data.xr) * (data.xl - data.xr) / func(data.xl) - func(data.xr)); //หา xm\n\n      data.fxl = func(data.xl).toFixed(6); //หา fxl\n\n      data.fxr = func(data.xr).toFixed(6); //หา fxr\n\n      data.fxm = func(data.xm).toFixed(6); //หา fxm\n\n      data.err = err(xOld, data.xm); //หาเออเร่อ\n\n      arr = this.state.Arr; //ให้ตัวแปร arr เท่ากับอาเรย์\n\n      arr.push({\n        xl: data.xl,\n        xr: data.xr,\n        xm: data.xm,\n        err: data.err,\n        fxl: data.fxl,\n        fxr: data.fxr,\n        fxm: data.fxm,\n        count: data.count\n      }); //ใส่ค่าใน arr เป็นค่าที่ใช้ไปแสดง\n\n      if (func(data.xm) === 0 || data.count === 15) {\n        //เช็คว่าถ้า fxm = 0 หรือ ทำครบ 15 รอบแล้ว ให้ t เป็น false\n        t = false;\n      } else if (func(data.xl) * func(data.xm) < 0) {\n        //เช็คว่า fxl คูณกับ ​fxm แล้ว มีค่าน้อยกว่า 0 ให้ xr เป็น xm\n        data.xr = data.xm;\n      } else if (func(data.xl) * func(data.xm) > 0) {\n        //เช็คว่า fxl คูณกับ ​fxm แล้ว มีค่ามากกว่า 0 ให้ xl เป็น xm\n        data.xl = data.xm;\n      }\n\n      data.count++;\n      xOld = data.xm;\n    }\n\n    for (let i = this.state.xl; i <= this.state.xr; i++) {\n      X.push(i);\n      Y.push(func(i));\n    }\n  }\n\n  render() {\n    const DataRow = props => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, props.data.result), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, props.data.real), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, props.data.err));\n    }; //ประกาศให้ DataRow เก็บค่าที่จะแสดงในตารางเอาไว้ แล้วส่งไปเมื่อมีคนเรียกใช้\n\n\n    let rows = this.state.Arr.map(x => {\n      return React.createElement(DataRow, {\n        key: x.count,\n        data: x,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"F\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"FW O(h)\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Equation :\"), React.createElement(\"input\", {\n      name: \"equation\",\n      type: \"text\",\n      value: this.state.equation,\n      onChange: this.handleChange,\n      placeholder: \"Enter Equation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"X :\"), React.createElement(\"input\", {\n      name: \"x\",\n      type: \"text\",\n      step: \"any\",\n      value: this.state.x,\n      onChange: this.handleChange,\n      placeholder: \"Enter X\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"H :\"), React.createElement(\"input\", {\n      name: \"xr\",\n      type: \"text\",\n      step: \"any\",\n      value: this.state.h,\n      onChange: this.handleChange,\n      placeholder: \"Enter H\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Differential :\"), React.createElement(\"input\", {\n      name: \"diff\",\n      type: \"text\",\n      step: \"any\",\n      value: this.state.diff,\n      onChange: this.handleChange,\n      placeholder: \"Enter Differential\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), this.state.submitted ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"T\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Result\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Real\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Error\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, rows))))), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      Data: this.state.Arr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Plot, {\n      data: [{\n        x: X,\n        y: Y,\n        type: 'scatter'\n      }],\n      latout: {\n        width: 500,\n        height: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default FWOH;","map":{"version":3,"sources":["/Users/nadol/Desktop/reactjs/my-app/src/FWOH.js"],"names":["React","Header","Sidebar","math","Plot","LineChart","X","Y","FWOH","Component","constructor","props","state","diffx","xh","equation","submitted","handleSubmit","bind","handleChange","event","setState","target","name","value","Arr","str","c","i","length","xl","xr","FalsePositionMethod","preventDefault","func","x","scope","code","compile","eval","err","x0","x1","Math","abs","arr","data","xm","fxl","fxr","fxm","count","t","xOld","parseFloat","toFixed","push","render","DataRow","result","real","rows","map","h","diff","y","type","width","height"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport * as math from 'mathjs';\nimport Plot from 'react-plotly.js';\nimport {LineChart} from 'recharts';\n\nvar X,Y;\nclass FWOH extends React.Component {\n    constructor(props) {\n        super(props);\n        X=[];\n        Y=[];\n        this.state={diffx:\"\",xh:\"\",equation:\"\",submitted:true}; //ประกาศตัวแปร xl xr และ equation\n        this.handleSubmit = this.handleSubmit.bind(this); //ประกาศฟังก์ชัน handleSubmit\n        this.handleChange = this.handleChange.bind(this); //ประกาศฟังก์ชัน handleChange\n        this.FWOH=this.FWOH.bind(this); //ประกาศฟังก์ชัน FalsePositionMethod\n    }\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value}); //ทำการเซตค่า xl xr equation ใหม่ให้เป็นไปตามที่ผู้ใช้กรอก\n        this.setState({submitted:true});\n        this.setState({Arr:[]});\n    }\n    handleSubmit(event) {\n        let str=this.state.equation; //ให้ str = equation (สมการที่รับมา)\n        let c=0;\n        for(let i=0;i<str.length;i++){ //เข้าลูปเช็คว่ามี x หรือ X หรือไม่ (ดูว่าที่กรอกมาเป็นสมการหรือเปล่า)\n          if(str[i]===\"x\"||str[i]===\"X\"){\n            c++;\n          }\n        }\n        if((str.length!==0)&&(c!==0)&&this.state.submitted&&this.state.xl!==\"\"&&this.state.xr!==\"\"){ //เช็คความยาวสมการต้องไม่เท่ากับ 0 และ c ที่เช็ค x ต้องไม่เท่ากับ 0 และ xl xr ต้องไม่ใช่ค่าว่าง\n          this.FalsePositionMethod(); //ส่งไปที่ฟังก์ชัน FalsePositionMethod\n          this.setState({submitted:false});\n        }\n        event.preventDefault();\n      }\n    FalsePositionMethod(event){\n        X=[];\n        Y=[];\n          var func=(x)=>{ //ฟังก์ชันย่อยรับค่ามาแล้วส่งไปแทนในสมการ\n              let scope={x:x}\n              let code=math.compile(this.state.equation); //ทำการกระจายสมการ\n              return code.eval(scope); //เอาค่าไปแทนในสมการแล้วรีเทิร์น\n            };\n          var err=(x0,x1)=>{return Math.abs((x1-x0)/x1)*100}; //ฟังก์ชันย่อยหาเออเร่อ\n          var arr;\n          var data={xl:0,xr:0,xm:0,err:\"\",fxl:0,fxr:0,fxm:0,count:1}; //ให้ดาต้าเริ่มต้นเป็น 0 ทั้งหมด\n          var t=true;\n          var xOld=0;\n          data.xl=parseFloat(this.state.xl); //ให้ xl ในดาต้าเท่ากับ xl ที่รับเข้ามาตอนกรอก\n          data.xr=parseFloat(this.state.xr); //ให้ xr ในดาต้าเท่ากับ xr ที่รับเข้ามาตอนกรอก\n\n          while(t){\n            data.xm=data.xr-((func(data.xr))*(data.xl-data.xr)/(func(data.xl))-(func(data.xr))); //หา xm\n            data.fxl=(func(data.xl)).toFixed(6); //หา fxl\n            data.fxr=(func(data.xr)).toFixed(6); //หา fxr\n            data.fxm=(func(data.xm)).toFixed(6); //หา fxm\n\n            data.err=err(xOld,data.xm); //หาเออเร่อ\n\n            arr=this.state.Arr; //ให้ตัวแปร arr เท่ากับอาเรย์\n            arr.push({xl:data.xl,xr:data.xr,xm:data.xm,err:data.err,fxl:data.fxl,fxr:data.fxr,fxm:data.fxm,count:data.count}); //ใส่ค่าใน arr เป็นค่าที่ใช้ไปแสดง\n            if(func(data.xm)===0||data.count===15){ //เช็คว่าถ้า fxm = 0 หรือ ทำครบ 15 รอบแล้ว ให้ t เป็น false\n              t=false;\n            }\n            else if(func(data.xl)*func(data.xm)<0){ //เช็คว่า fxl คูณกับ ​fxm แล้ว มีค่าน้อยกว่า 0 ให้ xr เป็น xm\n              data.xr=data.xm;\n            }\n            else if(func(data.xl)*func(data.xm)>0){ //เช็คว่า fxl คูณกับ ​fxm แล้ว มีค่ามากกว่า 0 ให้ xl เป็น xm\n              data.xl= data.xm;\n            }\n            data.count++;\n            xOld=data.xm;\n          }\n          for(let i=this.state.xl;i<=this.state.xr;i++){\n            X.push(i);\n            Y.push(func(i));\n          }\n    }\n\n    render() {\n        const DataRow=(props)=>{return (<tr><td>{props.data.result}</td> \n                                            <td>{props.data.real}</td>\n                                            <td>{props.data.err}</td></tr>);}\n                                            //ประกาศให้ DataRow เก็บค่าที่จะแสดงในตารางเอาไว้ แล้วส่งไปเมื่อมีคนเรียกใช้\n        let rows=this.state.Arr.map(x =>{return <DataRow key={x.count} data={x}/>}); \n        return (\n            <div>\n                <Header/>\n                <Sidebar />\n                <div className=\"content\">\n                <form id=\"F\" onSubmit={this.handleSubmit}>\n                    <h1>FW O(h)</h1><br></br>\n                        <h3>Equation :</h3>\n                        <input name=\"equation\" type=\"text\" value={this.state.equation} onChange={this.handleChange} placeholder=\"Enter Equation\"></input><br></br>\n                        <h3>X :</h3>\n                        <input name=\"x\" type=\"text\" step=\"any\" value={this.state.x} onChange={this.handleChange} placeholder=\"Enter X\"></input><br></br>\n                        <h3>H :</h3>\n                        <input name=\"xr\" type=\"text\" step=\"any\" value={this.state.h} onChange={this.handleChange} placeholder=\"Enter H\"></input><br></br><br></br>\n                        <h3>Differential :</h3>\n                        <input name=\"diff\" type=\"text\" step=\"any\" value={this.state.diff} onChange={this.handleChange} placeholder=\"Enter Differential\"></input><br></br><br></br>\n                        <button type=\"submit\" value=\"Submit\">Submit</button><br></br><br></br><br></br><br></br>\n                </form>\n\n                        {(this.state.submitted)\n                        ? <div></div>\n                        : <div><div id=\"T\">\n                            <center><table>\n                            <thead>\n                              <tr><th>Result</th>\n                                  <th>Real</th>\n                                  <th>Error</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {rows}\n                            </tbody>\n                        </table></center>\n                        </div>\n                        </div>\n                        \n                        }\n\n                        <center><div id=\"C\">\n                        <LineChart Data={this.state.Arr}/>\n                        <div>\n                            <Plot\n                                data={[\n                                    {\n                                        x:X,\n                                        y:Y,\n                                        type:'scatter'\n                                    }\n                                ]}\n                                latout={{width:500,height:300}}\n                            />\n                        </div>\n                        </div></center>\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default FWOH;"]},"metadata":{},"sourceType":"module"}