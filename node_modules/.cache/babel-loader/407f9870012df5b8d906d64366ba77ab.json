{"ast":null,"code":"var _jsxFileName = \"/Users/nadol/Desktop/reactjs/my-app/src/Bisection.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\n\nclass Bisection extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      result: null\n    };\n    this.elements = {};\n    this.onPlus = this.onPlus.bind(this);\n  }\n\n  render() {\n    const {\n      result\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"BISECTION\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Equation :\"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: el => this.elements.equation = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"X\", React.createElement(\"sub\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"L\"), \" :\"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: el => this.elements.firstValue = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"X\", React.createElement(\"sub\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"R\"), \" :\"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: el => this.elements.secondValue = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onPlus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, result), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Iteration\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"X\", React.createElement(\"sub\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"M\"), \"(old)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"X\", React.createElement(\"sub\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"L\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"X\", React.createElement(\"sub\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"R\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"F(X\", React.createElement(\"sub\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"L\"), \")\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"F(X\", React.createElement(\"sub\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"R\"), \")\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"X\", React.createElement(\"sub\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"M\"), \"(new)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"F(X\", React.createElement(\"sub\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"M\"), \")\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Error\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"0\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"0\"))))));\n  }\n\n  onPlus() {\n    const firstValue = parseInt(this.elements.firstValue.value, 10);\n    const secondValue = parseInt(this.elements.secondValue.value, 10);\n    const result = this.plus(firstValue, secondValue); // const x_old = secondValue;\n    // const n = 0;\n  }\n\n  plus(firstValue, secondValue) {\n    return firstValue + secondValue;\n  }\n\n}\n\nexport default Bisection; // constructor() {\n//     super()\n//     this.state = {\n//         result: null,\n//     }\n//     this.elements = {}\n//     this.onPlus = this.onPlus.bind(this);\n// }\n// render() {\n//     const { result } = this.state\n//     return (\n//         <div>\n//         <Header/>\n//         <Sidebar />\n//         <div className=\"content\">\n//             <form>\n//             <h1>Bisection</h1>\n//             <p>Enter Input</p>\n//             equation : <input type=\"text\" defaultValue={ '' } ref={ (el) => this.elements.equation = el } /><br></br><br></br>\n//             X<sub>L</sub> : <input type=\"number\" defaultValue={ '' } ref={ (el) => this.elements.firstValue = el } /><br></br><br></br>\n//             X<sub>R</sub> : <input type=\"number\" defaultValue={ '' } ref={ (el) => this.elements.secondValue = el } /><br></br><br></br>\n//             <button type=\"button\" onClick={ this.onPlus }>Click</button>\n//             <p className='result'>{ result }</p>\n//             </form>\n//         </div>\n//         </div>\n//     );\n// }\n// onPlus() {\n//     const firstValue = parseInt(this.elements.firstValue.value, 10)\n//     const secondValue = parseInt(this.elements.secondValue.value, 10)\n//     const resultPlus = this.plus(firstValue, secondValue)\n//     const x_old = secondValue;\n//     const n = 0;\n//const xm = 0;\n//const check = parseFloat(0.000000);\n// do{\n//const xm = this.findxm(firstValue, secondValue)\n//const rr = this.funcal(firstValue)\n// check = Math.abs((xm-x_old)/xm).toFixed(8);\n// console.log(check);\n// n++;\n// console.log(n);\n// if(parseFloat(firstValue)<parseFloat(secondValue)){\n//     if(this.funcal(firstValue)<this.funcal(secondValue)){\n//             if(this.funcal(xm)>0){\n//                     secondValue = xm\n//             }\n//             else if(this.funcal(xm)<0){\n//                     firstValue = xm\n//             }\n//     }\n//     else if(this.funcal(firstValue)>this.funcal(secondValue)){\n//             if(this.funcal(xm)<0){\n//                     secondValue = xm\n//             }\n//             else if(this.funcal(xm)>0){\n//                     firstValue = xm\n//             }\n//     }\n// }\n//x_old = xm\n// }while(check>0.00001)\n//     this.setState({\n//         result: resultPlus\n//     });\n// }\n// plus(firstValue, secondValue) {\n//     return firstValue + secondValue\n// }\n// findxm(firstValue, secondValue) {\n//     return (firstValue + secondValue) / 2\n// }\n// funcal(X) {\n//     const equation = parseInt(this.elements.equation.value, 10)\n//     //const expr = Math.compile(equation);\n//     // const scope = {x:parseFloat(X)};\n//     const expr = \"2x+1\";\n//     return expr.eval(X);\n// }\n// }\n// export default Bisection;","map":{"version":3,"sources":["/Users/nadol/Desktop/reactjs/my-app/src/Bisection.js"],"names":["React","Component","Header","Sidebar","Bisection","constructor","state","result","elements","onPlus","bind","render","el","equation","firstValue","secondValue","parseInt","value","plus"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Header from './Header';\nimport Sidebar from './Sidebar';\n\nclass Bisection extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            result: null,\n        }\n        this.elements = {}\n        this.onPlus = this.onPlus.bind(this);\n    }\n\n    render() {\n        const { result } = this.state\n        return (\n            <div>\n                <Header/>\n                <Sidebar />\n                <div className=\"content\">\n                    <h1>BISECTION</h1><br></br>\n                        <h3>Equation :</h3>\n                        <input type=\"text\" ref={ (el) => this.elements.equation = el }></input><br></br>\n                        <h3>X<sub>L</sub> :</h3>\n                        <input type=\"text\" ref={ (el) => this.elements.firstValue = el }></input><br></br>\n                        <h3>X<sub>R</sub> :</h3>\n                        <input type=\"text\" ref={ (el) => this.elements.secondValue = el }></input><br></br><br></br>\n                        <button onClick={ this.onPlus }>Submit</button><br></br><br></br><br></br><br></br>\n\n                        <p>{ result }</p>\n\n                        <center><table>\n                            <tr>\n                                <th>Iteration</th>\n                                <th>X<sub>M</sub>(old)</th>\n                                <th>X<sub>L</sub></th>\n                                <th>X<sub>R</sub></th>\n                                <th>F(X<sub>L</sub>)</th>\n                                <th>F(X<sub>R</sub>)</th>\n                                <th>X<sub>M</sub>(new)</th>\n                                <th>F(X<sub>M</sub>)</th>\n                                <th>Error</th>\n                            </tr>\n                            <tr>\n                                <td>0</td>\n                                <td>0</td>\n                                <td>0</td>\n                            </tr>\n                            <tr>\n                                <td>0</td>\n                                <td>0</td>\n                                <td>0</td>\n                            </tr>\n                        </table></center>\n\n                        \n                </div>\n\n            </div>\n\n        )\n    }\n\n    onPlus() {\n        const firstValue = parseInt(this.elements.firstValue.value, 10)\n        const secondValue = parseInt(this.elements.secondValue.value, 10)\n        const result = this.plus(firstValue, secondValue)\n        // const x_old = secondValue;\n        // const n = 0;\n    }\n\n    plus(firstValue, secondValue) {\n        return firstValue + secondValue\n    }\n    \n}\n\nexport default Bisection;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // constructor() {\n    //     super()\n    //     this.state = {\n    //         result: null,\n    //     }\n    //     this.elements = {}\n    //     this.onPlus = this.onPlus.bind(this);\n    // }\n\n    \n    // render() {\n    //     const { result } = this.state\n    //     return (\n    //         <div>\n    //         <Header/>\n    //         <Sidebar />\n    //         <div className=\"content\">\n    //             <form>\n    //             <h1>Bisection</h1>\n    //             <p>Enter Input</p>\n    //             equation : <input type=\"text\" defaultValue={ '' } ref={ (el) => this.elements.equation = el } /><br></br><br></br>\n    //             X<sub>L</sub> : <input type=\"number\" defaultValue={ '' } ref={ (el) => this.elements.firstValue = el } /><br></br><br></br>\n    //             X<sub>R</sub> : <input type=\"number\" defaultValue={ '' } ref={ (el) => this.elements.secondValue = el } /><br></br><br></br>\n    //             <button type=\"button\" onClick={ this.onPlus }>Click</button>\n    //             <p className='result'>{ result }</p>\n    //             </form>\n    //         </div>\n    //         </div>\n    //     );\n    // }\n\n    // onPlus() {\n    //     const firstValue = parseInt(this.elements.firstValue.value, 10)\n    //     const secondValue = parseInt(this.elements.secondValue.value, 10)\n    //     const resultPlus = this.plus(firstValue, secondValue)\n    //     const x_old = secondValue;\n    //     const n = 0;\n\n        //const xm = 0;\n        \n        //const check = parseFloat(0.000000);\n        // do{\n            //const xm = this.findxm(firstValue, secondValue)\n            //const rr = this.funcal(firstValue)\n            // check = Math.abs((xm-x_old)/xm).toFixed(8);\n            // console.log(check);\n            // n++;\n            // console.log(n);\n\n            // if(parseFloat(firstValue)<parseFloat(secondValue)){\n            //     if(this.funcal(firstValue)<this.funcal(secondValue)){\n            //             if(this.funcal(xm)>0){\n            //                     secondValue = xm\n            //             }\n            //             else if(this.funcal(xm)<0){\n            //                     firstValue = xm\n            //             }\n            //     }\n            //     else if(this.funcal(firstValue)>this.funcal(secondValue)){\n            //             if(this.funcal(xm)<0){\n            //                     secondValue = xm\n            //             }\n            //             else if(this.funcal(xm)>0){\n            //                     firstValue = xm\n            //             }\n            //     }\n            // }\n            //x_old = xm\n        // }while(check>0.00001)\n\n    //     this.setState({\n    //         result: resultPlus\n    //     });\n    // }\n\n    // plus(firstValue, secondValue) {\n    //     return firstValue + secondValue\n    // }\n\n    // findxm(firstValue, secondValue) {\n    //     return (firstValue + secondValue) / 2\n    // }\n\n    // funcal(X) {\n    //     const equation = parseInt(this.elements.equation.value, 10)\n    //     //const expr = Math.compile(equation);\n    //     // const scope = {x:parseFloat(X)};\n    //     const expr = \"2x+1\";\n    //     return expr.eval(X);\n    // }\n\n    \n\n// }\n\n// export default Bisection;"]},"metadata":{},"sourceType":"module"}