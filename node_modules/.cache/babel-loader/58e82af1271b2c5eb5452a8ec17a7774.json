{"ast":null,"code":"var _jsxFileName = \"/Users/nadol/Desktop/reactjs/my-app/src/Cramer.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { Input } from 'antd';\nimport * as math from 'mathjs';\nvar MatrixA = [],\n    MatrixB = [],\n    Output = [],\n    A = [],\n    B = [],\n    C = 0;\n\nclass Cramer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMatrix: false,\n      showOutput: false,\n      variable: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.CramerMethod = this.CramerMethod.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    this.setState({\n      showMatrix: false,\n      showOutput: false\n    });\n    MatrixA = [];\n    MatrixB = [];\n  }\n\n  handleSubmit(event) {\n    let variable = parseInt(this.state.variable);\n\n    if (variable !== 0 || variable !== \"\") {\n      this.createMatrix(variable);\n      this.setState({\n        showMatrix: true\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  createMatrix(n) {\n    MatrixA = [];\n    MatrixB = [];\n\n    for (var i = 1; i <= n; i++) {\n      for (var j = 1; j <= n; j++) {\n        MatrixA.push(React.createElement(Input, {\n          style: {\n            width: \"10%\",\n            height: \"40%\",\n            fontSize: \"18px\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\"\n          },\n          className: \"input is-primary\",\n          id: \"a\" + i + \"\" + j,\n          key: \"a\" + i + \"\" + j,\n          placeholder: \"a\" + i + \"\" + j,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }));\n      }\n\n      MatrixA.push(React.createElement(\"br\", {\n        key: \"br\" + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n      MatrixB.push(React.createElement(Input, {\n        style: {\n          width: \"10%\",\n          height: \"40%\",\n          fontSize: \"18px\",\n          marginInlineEnd: \"5%\",\n          marginBlockEnd: \"5%\"\n        },\n        className: \"input is-danger\",\n        id: \"b\" + i,\n        key: \"b\" + i,\n        placeholder: \"b\" + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n  }\n\n  initMatrix() {\n    A = [];\n    B = [];\n    C = 0;\n    Output = [];\n\n    for (var i = 0; i < this.state.variable; i++) {\n      A[i] = [];\n\n      for (var j = 0; j < this.state.variable; j++) {\n        A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n      }\n\n      B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n    }\n  }\n\n  CramerMethod(event) {\n    this.initMatrix();\n    var count = 0;\n\n    while (count < this.state.variable) {\n      var transformMatrix = JSON.parse(JSON.stringify(A));\n\n      for (var i = 0; i < this.state.variable; i++) {\n        for (var j = 0; j < this.state.variable; j++) {\n          if (j === count) {\n            transformMatrix[i][j] = B[i];\n            break;\n          }\n        }\n      }\n\n      count++;\n      Output.push((math.det(transformMatrix) / math.det(A)).toFixed(1));\n    }\n\n    for (let k = 0; k < this.state.variable; k++) {\n      console.log(Output[k]);\n    }\n\n    this.setState({\n      showOutput: true\n    });\n  }\n\n  render() {\n    const DataRow = props => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, C + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, Output[C++]));\n    };\n\n    let rows = Output.map(x => {\n      return React.createElement(DataRow, {\n        key: C + 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"F\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"CRAMER'S RULE\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Enter number of variable:\"), React.createElement(\"input\", {\n      name: \"variable\",\n      type: \"text\",\n      value: this.state.variable,\n      onChange: this.handleChange,\n      placeholder: \"Enter number of variable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.showMatrix && React.createElement(\"div\", {\n      id: \"M\",\n      className: \"box has-background-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title is-1 has-text-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Enter Matrix values\")), React.createElement(\"hr\", {\n      className: \"is-divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"title is-3 has-text-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Enter Matrix values :\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, MatrixA, \"= \", MatrixB), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      className: \"title is-3 has-text-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Enter Vector values :\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, MatrixB)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"field has-addons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button is-success is-rounded\",\n      onClick: this.CramerRule,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"  Submit  \"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Cramer;","map":{"version":3,"sources":["/Users/nadol/Desktop/reactjs/my-app/src/Cramer.js"],"names":["React","Component","Header","Sidebar","Input","math","MatrixA","MatrixB","Output","A","B","C","Cramer","constructor","props","state","showMatrix","showOutput","variable","handleChange","bind","handleSubmit","CramerMethod","event","setState","target","name","value","parseInt","createMatrix","preventDefault","n","i","j","push","width","height","fontSize","marginInlineEnd","marginBlockEnd","initMatrix","parseFloat","document","getElementById","count","transformMatrix","JSON","parse","stringify","det","toFixed","k","console","log","render","DataRow","rows","map","x","CramerRule"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport {Input} from 'antd';\nimport * as math from 'mathjs';\n\nvar MatrixA=[],MatrixB=[],Output=[],A=[],B=[],C=0;\nclass Cramer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={showMatrix:false,showOutput:false,variable:\"\"};\n        this.handleChange=this.handleChange.bind(this);\n        this.handleSubmit=this.handleSubmit.bind(this);\n        this.CramerMethod=this.CramerMethod.bind(this);\n    }\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n        this.setState({showMatrix:false,showOutput:false});\n        MatrixA=[];\n        MatrixB=[];\n    }\n    handleSubmit(event) {\n        let variable=parseInt(this.state.variable);\n        if(variable!==0||variable!==\"\"){\n            this.createMatrix(variable);\n            this.setState({showMatrix:true});\n        }\n        event.preventDefault();\n    }\n    createMatrix(n) {\n        MatrixA=[];\n        MatrixB=[];\n            for (var i=1 ; i<=n ; i++) {\n                for (var j=1 ; j<=n ; j++) {\n                    MatrixA.push(<Input style={{\n                        width: \"10%\",\n                        height: \"40%\",\n                        fontSize: \"18px\",\n                        marginInlineEnd: \"5%\",\n                        marginBlockEnd: \"5%\",\n                    }}\n                    className=\"input is-primary\"\n                    id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j}\n                    placeholder={\"a\"+i+\"\"+j} />)\n                }\n                MatrixA.push(<br key={\"br\"+i}/>)\n                MatrixB.push(<Input style={{\n                    width: \"10%\",\n                    height: \"40%\",\n                    fontSize: \"18px\",\n                    marginInlineEnd: \"5%\",\n                    marginBlockEnd: \"5%\",\n                }}\n                className=\"input is-danger\"\n                id={\"b\"+i} key={\"b\"+i}\n                placeholder={\"b\"+i} />)\n            }\n    }\n    initMatrix() {\n        A=[];\n        B=[];\n        C=0;\n        Output=[];\n          for(var i=0 ; i<this.state.variable ; i++) {\n              A[i] = []\n              for(var j=0 ; j<this.state.variable ; j++) {\n                  A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\n              }\n              B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\n          }\n    }\n    CramerMethod(event){\n        this.initMatrix();\n        var count=0;\n        while (count < this.state.variable) {\n            var transformMatrix = JSON.parse(JSON.stringify(A));\n            for (var i=0 ; i<this.state.variable ; i++) {\n                for (var j=0 ; j<this.state.variable ; j++) {\n                    if (j === count) {\n                        transformMatrix[i][j] = B[i]\n                        break;\n                    }\n                }\n            }\n            count++;\n            Output.push((math.det(transformMatrix)/math.det(A)).toFixed(1));\n        }\n        for(let k=0;k<this.state.variable;k++){\n        console.log(Output[k]);\n        }\n        this.setState({showOutput: true});\n    }\n\n    render() {\n        const DataRow=(props)=>{return (<tr><td>{C+1}</td>\n                                        <td>{Output[C++]}</td>\n                                        {/* <td><progress class=\"progress is-danger\" value={props.data.err} max=\"100\">{props.data.err}%</progress></td> */}\n                                        </tr>);\n                                        }\n        let rows=Output.map(x =>{return <DataRow key={C+1}/>}); \n        return (\n            <div>\n                <Header/>\n                <Sidebar />\n                <div className=\"content\">\n                <form id=\"F\" onSubmit={this.handleSubmit}>\n                    <h1>CRAMER'S RULE</h1><br></br>\n                        <h3>Enter number of variable:</h3>\n                        <input name=\"variable\" type=\"text\" value={this.state.variable} onChange={this.handleChange} placeholder=\"Enter number of variable\"></input><br></br><br></br>\n                        <button type=\"submit\" value=\"Submit\">Submit</button><br></br><br></br><br></br><br></br>\n                </form>\n\n                <div>\n                        {(this.state.showMatrix)&&\n                          <div id=\"M\" className=\"box has-background-light\">\n                              <h1 className=\"title is-1 has-text-dark\"><strong>Enter Matrix values</strong></h1>\n                              <hr className=\"is-divider\"/>\n                                  <div>\n                                      <strong className=\"title is-3 has-text-dark\">Enter Matrix values :</strong>\n                                      <br/><br/>\n                                      <div>{MatrixA}= {MatrixB}</div>\n                                      <br/><br/>\n                                      <strong className=\"title is-3 has-text-dark\">Enter Vector values :</strong>\n                                      <br/><br/>\n                                      <div>{MatrixB}</div>\n                                  </div><br/><br/>\n                              <div className=\"field has-addons\">\n                                  <div className=\"control\">\n                                      <button className=\"button is-success is-rounded\" onClick={this.CramerRule}>  Submit  </button>\n                                  </div>\n                              </div>\n                          </div>\n                        }\n                        </div><br/>\n\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default Cramer;"]},"metadata":{},"sourceType":"module"}