{"ast":null,"code":"var _jsxFileName = \"/Users/nadol/Desktop/reactjs/my-app/src/Bisection.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\n\nclass Bisection extends React.Component {\n  constructor() {\n    super();\n\n    this.funcal = X => {\n      var expression = document.getElementById(\"text1\").value;\n      expr = math.compile(expression);\n      let scope = {\n        x: parseFloat(X)\n      };\n      return expr.eval(scope);\n    };\n\n    this.state = {\n      result: null\n    };\n    this.elements = {};\n    this.onPlus = this.onPlus.bind(this);\n  }\n\n  render() {\n    const {\n      result\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Bisection\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Enter Input\"), \"equation : \", React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: '',\n      ref: el => this.elements.equation = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), \"X\", React.createElement(\"sub\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"L\"), \" : \", React.createElement(\"input\", {\n      type: \"number\",\n      defaultValue: '',\n      ref: el => this.elements.firstValue = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), \"X\", React.createElement(\"sub\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"R\"), \" : \", React.createElement(\"input\", {\n      type: \"number\",\n      defaultValue: '',\n      ref: el => this.elements.secondValue = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onPlus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Click\"), React.createElement(\"p\", {\n      className: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, result))));\n  }\n\n  onPlus() {\n    const firstValue = parseInt(this.elements.firstValue.value, 10);\n    const secondValue = parseInt(this.elements.secondValue.value, 10);\n    const resultPlus = this.plus(firstValue, secondValue);\n    const x_old = secondValue;\n    const n = 0;\n    const xm = 0;\n    const check = parseFloat(0.000000);\n\n    do {\n      xm = this.findxm(firstValue, secondValue);\n      check = Math.abs((xm - x_old) / xm).toFixed(8);\n      console.log(check);\n      n++;\n      console.log(n);\n\n      if (parseFloat(firstValue) < parseFloat(secondValue)) {\n        if (funcal(firstValue) < funcal(secondValue)) {\n          if (funcal(xm) > 0) {\n            secondValue = xm;\n          } else if (funcal(xm) < 0) {\n            firstValue = xm;\n          }\n        } else if (funcal(firstValue) > funcal(secondValue)) {\n          if (funcal(xm) < 0) {\n            secondValue = xm;\n          } else if (funcal(xm) > 0) {\n            firstValue = xm;\n          }\n        }\n      }\n\n      x_old = xm;\n    } while (check > 0.00001);\n\n    this.setState({\n      result: resultPlus,\n      n\n    });\n  }\n\n  plus(firstValue, secondValue) {\n    return firstValue + secondValue;\n  }\n\n  findxm(firstValue, secondValue) {\n    return (firstValue + secondValue) / 2;\n  }\n\n}\n\nexport default Bisection;","map":{"version":3,"sources":["/Users/nadol/Desktop/reactjs/my-app/src/Bisection.js"],"names":["React","Component","Header","Sidebar","Bisection","constructor","funcal","X","expression","document","getElementById","value","expr","math","compile","scope","x","parseFloat","eval","state","result","elements","onPlus","bind","render","el","equation","firstValue","secondValue","parseInt","resultPlus","plus","x_old","n","xm","check","findxm","Math","abs","toFixed","console","log","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Header from './Header';\nimport Sidebar from './Sidebar';\n\nclass Bisection extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            result: null,\n        }\n        this.elements = {}\n        this.onPlus = this.onPlus.bind(this);\n    }\n\n    \n    render() {\n        const { result } = this.state\n        return (\n            <div>\n            <Header/>\n            <Sidebar />\n            <div className=\"content\">\n                <form>\n                <h1>Bisection</h1>\n                <p>Enter Input</p>\n                equation : <input type=\"text\" defaultValue={ '' } ref={ (el) => this.elements.equation = el } /><br></br><br></br>\n                X<sub>L</sub> : <input type=\"number\" defaultValue={ '' } ref={ (el) => this.elements.firstValue = el } /><br></br><br></br>\n                X<sub>R</sub> : <input type=\"number\" defaultValue={ '' } ref={ (el) => this.elements.secondValue = el } /><br></br><br></br>\n                <button type=\"button\" onClick={ this.onPlus }>Click</button>\n                <p className='result'>{ result }</p>\n                </form>\n            </div>\n            </div>\n        );\n    }\n\n    onPlus() {\n        const firstValue = parseInt(this.elements.firstValue.value, 10)\n        const secondValue = parseInt(this.elements.secondValue.value, 10)\n        const resultPlus = this.plus(firstValue, secondValue)\n        const x_old = secondValue;\n        const n = 0;\n        const xm = 0;\n        \n        const check = parseFloat(0.000000);\n        do{\n            xm = this.findxm(firstValue, secondValue)\n            check = Math.abs((xm-x_old)/xm).toFixed(8);\n            console.log(check);\n            n++;\n            console.log(n);\n\n            if(parseFloat(firstValue)<parseFloat(secondValue)){\n                if(funcal(firstValue)<funcal(secondValue)){\n                        if(funcal(xm)>0){\n                                secondValue = xm\n                        }\n                        else if(funcal(xm)<0){\n                                firstValue = xm\n                        }\n                }\n                else if(funcal(firstValue)>funcal(secondValue)){\n                        if(funcal(xm)<0){\n                                secondValue = xm\n                        }\n                        else if(funcal(xm)>0){\n                                firstValue = xm\n                        }\n                }\n            }\n            x_old = xm\n        }while(check>0.00001)\n\n        this.setState({\n            result: resultPlus,n\n        });\n    }\n\n    plus(firstValue, secondValue) {\n        return firstValue + secondValue\n    }\n\n    findxm(firstValue, secondValue) {\n        return (firstValue + secondValue) / 2\n    }\n\n    funcal = (X) => {\n        var expression = document.getElementById(\"text1\").value;\n        expr = math.compile(expression);\n        let scope = {x:parseFloat(X)};\n        return expr.eval(scope);\n    }\n\n    \n\n}\n\nexport default Bisection;"]},"metadata":{},"sourceType":"module"}