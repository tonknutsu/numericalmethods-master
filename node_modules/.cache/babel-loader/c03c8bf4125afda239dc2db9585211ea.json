{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _PromiseUtils = require('./PromiseUtils');\n\nfunction getComponentsForRoute(nextState, route, callback) {\n  if (route.component || route.components) {\n    callback(null, route.component || route.components);\n    return;\n  }\n\n  var getComponent = route.getComponent || route.getComponents;\n\n  if (getComponent) {\n    var componentReturn = getComponent.call(route, nextState, callback);\n    if ((0, _PromiseUtils.isPromise)(componentReturn)) componentReturn.then(function (component) {\n      return callback(null, component);\n    }, callback);\n  } else {\n    callback();\n  }\n}\n/**\n * Asynchronously fetches all components needed for the given router\n * state and calls callback(error, components) when finished.\n *\n * Note: This operation may finish synchronously if no routes have an\n * asynchronous getComponents method.\n */\n\n\nfunction getComponents(nextState, callback) {\n  (0, _AsyncUtils.mapAsync)(nextState.routes, function (route, index, callback) {\n    getComponentsForRoute(nextState, route, callback);\n  }, callback);\n}\n\nexports.default = getComponents;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/nadol/node_modules/react-router/lib/getComponents.js"],"names":["exports","__esModule","_AsyncUtils","require","_PromiseUtils","getComponentsForRoute","nextState","route","callback","component","components","getComponent","getComponents","componentReturn","call","isPromise","then","mapAsync","routes","index","default","module"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAAzB;;AAEA,IAAIC,aAAa,GAAGD,OAAO,CAAC,gBAAD,CAA3B;;AAEA,SAASE,qBAAT,CAA+BC,SAA/B,EAA0CC,KAA1C,EAAiDC,QAAjD,EAA2D;AACzD,MAAID,KAAK,CAACE,SAAN,IAAmBF,KAAK,CAACG,UAA7B,EAAyC;AACvCF,IAAAA,QAAQ,CAAC,IAAD,EAAOD,KAAK,CAACE,SAAN,IAAmBF,KAAK,CAACG,UAAhC,CAAR;AACA;AACD;;AAED,MAAIC,YAAY,GAAGJ,KAAK,CAACI,YAAN,IAAsBJ,KAAK,CAACK,aAA/C;;AACA,MAAID,YAAJ,EAAkB;AAChB,QAAIE,eAAe,GAAGF,YAAY,CAACG,IAAb,CAAkBP,KAAlB,EAAyBD,SAAzB,EAAoCE,QAApC,CAAtB;AACA,QAAI,CAAC,GAAGJ,aAAa,CAACW,SAAlB,EAA6BF,eAA7B,CAAJ,EAAmDA,eAAe,CAACG,IAAhB,CAAqB,UAAUP,SAAV,EAAqB;AAC3F,aAAOD,QAAQ,CAAC,IAAD,EAAOC,SAAP,CAAf;AACD,KAFkD,EAEhDD,QAFgD;AAGpD,GALD,MAKO;AACLA,IAAAA,QAAQ;AACT;AACF;AAED;;;;;;;;;AAOA,SAASI,aAAT,CAAuBN,SAAvB,EAAkCE,QAAlC,EAA4C;AAC1C,GAAC,GAAGN,WAAW,CAACe,QAAhB,EAA0BX,SAAS,CAACY,MAApC,EAA4C,UAAUX,KAAV,EAAiBY,KAAjB,EAAwBX,QAAxB,EAAkC;AAC5EH,IAAAA,qBAAqB,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,QAAnB,CAArB;AACD,GAFD,EAEGA,QAFH;AAGD;;AAEDR,OAAO,CAACoB,OAAR,GAAkBR,aAAlB;AACAS,MAAM,CAACrB,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _PromiseUtils = require('./PromiseUtils');\n\nfunction getComponentsForRoute(nextState, route, callback) {\n  if (route.component || route.components) {\n    callback(null, route.component || route.components);\n    return;\n  }\n\n  var getComponent = route.getComponent || route.getComponents;\n  if (getComponent) {\n    var componentReturn = getComponent.call(route, nextState, callback);\n    if ((0, _PromiseUtils.isPromise)(componentReturn)) componentReturn.then(function (component) {\n      return callback(null, component);\n    }, callback);\n  } else {\n    callback();\n  }\n}\n\n/**\n * Asynchronously fetches all components needed for the given router\n * state and calls callback(error, components) when finished.\n *\n * Note: This operation may finish synchronously if no routes have an\n * asynchronous getComponents method.\n */\nfunction getComponents(nextState, callback) {\n  (0, _AsyncUtils.mapAsync)(nextState.routes, function (route, index, callback) {\n    getComponentsForRoute(nextState, route, callback);\n  }, callback);\n}\n\nexports.default = getComponents;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}