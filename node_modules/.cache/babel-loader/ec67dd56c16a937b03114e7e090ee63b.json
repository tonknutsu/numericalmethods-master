{"ast":null,"code":"var _jsxFileName = \"/Users/nadol/Desktop/reactjs/my-app/src/Secant.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport * as math from 'mathjs';\nimport Plot from 'react-plotly.js';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nvar X, Y;\n\nclass NewtonRaphson extends React.Component {\n  constructor(props) {\n    super(props);\n    X = [];\n    Y = [];\n    this.state = {\n      Arr: [],\n      x0: \"\",\n      equation: \"\",\n      equationdiff: \"\",\n      submitted: true\n    }; //ประกาศตัวแปร xl xr และ equation\n\n    this.handleSubmit = this.handleSubmit.bind(this); //ประกาศฟังก์ชัน handleSubmit\n\n    this.handleChange = this.handleChange.bind(this); //ประกาศฟังก์ชัน handleChange\n\n    this.NewtonRaphsonMethod = this.NewtonRaphsonMethod.bind(this); //ประกาศฟังก์ชัน NewtonRaphsonMethod\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    }); //ทำการเซตค่า xl xr equation ใหม่ให้เป็นไปตามที่ผู้ใช้กรอก\n\n    this.setState({\n      submitted: true\n    });\n    this.setState({\n      Arr: []\n    });\n  }\n\n  handleSubmit(event) {\n    let str = this.state.equation; //ให้ str = equation (สมการที่รับมา)\n\n    let str2 = this.state.equationdiff;\n    let c = 0;\n\n    for (let i = 0; i < str.length; i++) {\n      //เข้าลูปเช็คว่ามี x หรือ X หรือไม่ (ดูว่าที่กรอกมาเป็นสมการหรือเปล่า)\n      if (str[i] === \"x\" || str[i] === \"X\") {\n        c++;\n      }\n    }\n\n    if (str.length !== 0 && str2.length !== 0 && c !== 0 && this.state.submitted && this.state.x0 !== \"\") {\n      //เช็คความยาวสมการต้องไม่เท่ากับ 0 และ c ที่เช็ค x ต้องไม่เท่ากับ 0 และ xl ต้องไม่ใช่ค่าว่าง\n      this.NewtonRaphsonMethod(); //ส่งไปที่ฟังก์ชัน NewtonRaphsonMethod\n\n      this.setState({\n        submitted: false\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  NewtonRaphsonMethod(event) {\n    var func = x => {\n      let scope = {\n        x: x\n      };\n      let code = math.compile(this.state.equation);\n      return code.eval(scope);\n    };\n\n    var func2 = x => {\n      let scope = {\n        x: x\n      };\n      let code = math.compile(this.state.equationdiff);\n      return code.eval(scope);\n    };\n    /*var funcx=(x)=>{\n        return math.derivative(this.state.E,'x').eval({x:x});\n    };*/\n\n\n    var err = (x0, x1) => {\n      console.log(\"x1 is \" + x1);\n      console.log(\"x0 is \" + x0);\n      return Math.abs((x1 - x0) / x1) * 100;\n    };\n\n    var arr;\n    var data = {\n      x0: 0,\n      err: \"\",\n      fx: 0,\n      count: 1\n    };\n    var t = true;\n    var xOld = parseFloat(this.state.x0);\n\n    while (t) {\n      data.x0 = xOld - func(xOld) / func2(xOld);\n      data.fx = func(data.x0);\n      data.err = err(xOld, data.x0).toFixed(4);\n      arr = this.state.Arr;\n\n      if (data.err <= 0 || data.count > 15) {\n        t = false;\n      } else {\n        arr.push({\n          x0: data.x0,\n          err: data.err,\n          count: data.count\n        });\n      }\n\n      data.count++;\n      xOld = data.x0;\n    }\n  }\n\n  render() {\n    const DataRow = props => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, props.data.count), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, props.data.x0), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, props.data.err));\n    }; //ประกาศให้ DataRow เก็บค่าที่จะแสดงในตารางเอาไว้ แล้วส่งไปเมื่อมีคนเรียกใช้\n\n\n    let rows = this.state.Arr.map(x => {\n      return React.createElement(DataRow, {\n        key: x.count,\n        data: x,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"F\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"NEWTON RAPHSON\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Equation F(x) :\"), React.createElement(\"input\", {\n      name: \"equation\",\n      type: \"text\",\n      value: this.state.equation,\n      onChange: this.handleChange,\n      placeholder: \"Enter Equation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Equation F'(x) :\"), React.createElement(\"input\", {\n      name: \"equationdiff\",\n      type: \"text\",\n      step: \"any\",\n      value: this.state.equationdiff,\n      onChange: this.handleChange,\n      placeholder: \"Enter Equationdiff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"X[0] :\"), React.createElement(\"input\", {\n      name: \"x0\",\n      type: \"text\",\n      step: \"any\",\n      value: this.state.x0,\n      onChange: this.handleChange,\n      placeholder: \"Enter X[0]\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), this.state.submitted ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"T\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Iteration\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"X \"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Error\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, rows))))), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      Data: this.state.Arr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Plot, {\n      data: [{\n        x: X,\n        y: Y,\n        type: 'scatter'\n      }],\n      latout: {\n        width: 500,\n        height: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default NewtonRaphson;","map":{"version":3,"sources":["/Users/nadol/Desktop/reactjs/my-app/src/Secant.js"],"names":["React","Component","Header","Sidebar","math","Plot","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","X","Y","NewtonRaphson","constructor","props","state","Arr","x0","equation","equationdiff","submitted","handleSubmit","bind","handleChange","NewtonRaphsonMethod","event","setState","target","name","value","str","str2","c","i","length","preventDefault","func","x","scope","code","compile","eval","func2","err","x1","console","log","Math","abs","arr","data","fx","count","t","xOld","parseFloat","toFixed","push","render","DataRow","rows","map","y","type","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport * as math from 'mathjs';\nimport Plot from 'react-plotly.js';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nvar X,Y;\nclass NewtonRaphson extends React.Component {\n    constructor(props) {\n        super(props);\n        X=[];\n        Y=[];\n        this.state={Arr:[],x0:\"\",equation:\"\",equationdiff:\"\",submitted:true}; //ประกาศตัวแปร xl xr และ equation\n        this.handleSubmit = this.handleSubmit.bind(this); //ประกาศฟังก์ชัน handleSubmit\n        this.handleChange = this.handleChange.bind(this); //ประกาศฟังก์ชัน handleChange\n        this.NewtonRaphsonMethod=this.NewtonRaphsonMethod.bind(this); //ประกาศฟังก์ชัน NewtonRaphsonMethod\n    }\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value}); //ทำการเซตค่า xl xr equation ใหม่ให้เป็นไปตามที่ผู้ใช้กรอก\n        this.setState({submitted:true});\n        this.setState({Arr:[]});\n    }\n    handleSubmit(event) {\n        let str=this.state.equation; //ให้ str = equation (สมการที่รับมา)\n        let str2=this.state.equationdiff;\n        let c=0;\n        for(let i=0;i<str.length;i++){ //เข้าลูปเช็คว่ามี x หรือ X หรือไม่ (ดูว่าที่กรอกมาเป็นสมการหรือเปล่า)\n          if(str[i]===\"x\"||str[i]===\"X\"){\n            c++;\n          }\n        }\n        if((str.length!==0)&&(str2.length!==0)&&(c!==0)&&this.state.submitted&&this.state.x0!==\"\"){ //เช็คความยาวสมการต้องไม่เท่ากับ 0 และ c ที่เช็ค x ต้องไม่เท่ากับ 0 และ xl ต้องไม่ใช่ค่าว่าง\n          this.NewtonRaphsonMethod(); //ส่งไปที่ฟังก์ชัน NewtonRaphsonMethod\n          this.setState({submitted:false});\n        }\n        event.preventDefault();\n    }\n    NewtonRaphsonMethod(event){\n        var func=(x)=>{\n            let scope={x:x}\n            let code=math.compile(this.state.equation);\n            return code.eval(scope);\n        };\n        var func2=(x)=>{\n            let scope={x:x}\n            let code=math.compile(this.state.equationdiff);\n            return code.eval(scope);\n        };\n        /*var funcx=(x)=>{\n            return math.derivative(this.state.E,'x').eval({x:x});\n        };*/\n        var err=(x0,x1)=>{\n          console.log(\"x1 is \"+x1);\n          console.log(\"x0 is \"+x0);\n          return Math.abs((x1-x0)/x1)*100};\n        var arr;\n        var data={x0:0,err:\"\",fx:0,count:1};\n        var t=true;\n        var xOld=parseFloat(this.state.x0);\n        while(t){\n          data.x0=xOld-(func(xOld)/func2(xOld));\n          data.fx=func(data.x0);\n          data.err=err(xOld,data.x0).toFixed(4);\n          arr=this.state.Arr;\n          if(data.err<=0||data.count>15){\n            t=false;\n          }else{\n            arr.push({x0:data.x0,err:data.err,count:data.count});\n          }\n          data.count++;\n          xOld=data.x0;\n        }\n    }\n\n    render() {\n        const DataRow=(props)=>{return (<tr><td>{props.data.count}</td> \n                                            <td>{props.data.x0}</td>\n                                            <td>{props.data.err}</td></tr>);}\n                                            //ประกาศให้ DataRow เก็บค่าที่จะแสดงในตารางเอาไว้ แล้วส่งไปเมื่อมีคนเรียกใช้\n        let rows=this.state.Arr.map(x =>{return <DataRow key={x.count} data={x}/>}); \n        return (\n            <div>\n                <Header/>\n                <Sidebar />\n                <div className=\"content\">\n                <form id=\"F\" onSubmit={this.handleSubmit}>\n                    <h1>NEWTON RAPHSON</h1><br></br>\n                        <h3>Equation F(x) :</h3>\n                        <input name=\"equation\" type=\"text\" value={this.state.equation} onChange={this.handleChange} placeholder=\"Enter Equation\"></input><br></br>\n                        <h3>Equation F'(x) :</h3>\n                        <input name=\"equationdiff\" type=\"text\" step=\"any\" value={this.state.equationdiff} onChange={this.handleChange} placeholder=\"Enter Equationdiff\"></input><br></br>\n                        <h3>X[0] :</h3>\n                        <input name=\"x0\" type=\"text\" step=\"any\" value={this.state.x0} onChange={this.handleChange} placeholder=\"Enter X[0]\"></input><br></br>\n                        <button type=\"submit\" value=\"Submit\">Submit</button><br></br><br></br><br></br><br></br>\n                </form>\n\n                        {(this.state.submitted)\n                        ? <div></div>\n                        : <div><div id=\"T\">\n                            <center><table>\n                            <thead>\n                              <tr><th>Iteration</th>\n                                  <th>X </th>\n                                  <th>Error</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {rows}\n                            </tbody>\n                        </table></center>\n                        </div>\n                        </div>\n                        \n                        }\n\n                        <center><div id=\"C\">\n                        <LineChart Data={this.state.Arr}/>\n                        <div>\n                            <Plot\n                                data={[\n                                    {\n                                        x:X,\n                                        y:Y,\n                                        type:'scatter'\n                                    }\n                                ]}\n                                latout={{width:500,height:300}}\n                            />\n                        </div>\n                        </div></center>\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default NewtonRaphson;"]},"metadata":{},"sourceType":"module"}