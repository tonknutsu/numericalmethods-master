{"ast":null,"code":"var _jsxFileName = \"/Users/nadol/Desktop/reactjs/my-app/src/Cramer.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport * as math from 'mathjs';\nimport Plot from 'react-plotly.js';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nvar X, Y;\n\nclass Cramer extends React.Component {\n  constructor(props) {\n    super(props);\n    X = [];\n    Y = [];\n    this.state = {\n      Arr: [],\n      variable: \"\",\n      submitted: true\n    }; //ประกาศตัวแปร xl xr และ equation\n\n    this.handleSubmit = this.handleSubmit.bind(this); //ประกาศฟังก์ชัน handleSubmit\n\n    this.handleChange = this.handleChange.bind(this); //ประกาศฟังก์ชัน handleChange\n\n    this.CramerMethod = this.CramerMethod.bind(this); //ประกาศฟังก์ชัน CramerMethod\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    }); //ทำการเซตค่า xl xr equation ใหม่ให้เป็นไปตามที่ผู้ใช้กรอก\n\n    this.setState({\n      submitted: true\n    });\n    this.setState({\n      Arr: []\n    });\n  }\n\n  handleSubmit(event) {\n    let str = this.state.variable; //ให้ str = equation (สมการที่รับมา)\n\n    let c = 0;\n\n    for (let i = 0; i < str.length; i++) {\n      //เข้าลูปเช็คว่ามี x หรือ X หรือไม่ (ดูว่าที่กรอกมาเป็นสมการหรือเปล่า)\n      if (str[i] === \"x\" || str[i] === \"X\") {\n        c++;\n      }\n    }\n\n    if (str.length !== 0 && c !== 0 && this.state.submitted && this.state.x0 !== \"\") {\n      //เช็คความยาวสมการต้องไม่เท่ากับ 0 และ c ที่เช็ค x ต้องไม่เท่ากับ 0 และ xl ต้องไม่ใช่ค่าว่าง\n      this.CramerMethod(); //ส่งไปที่ฟังก์ชัน CramerMethod\n\n      this.setState({\n        submitted: false\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  CramerMethod(event) {\n    X = [];\n    Y = [];\n\n    var func = x => {\n      //ฟังก์ชันย่อยรับค่ามาแล้วส่งไปแทนในสมการ\n      let scope = {\n        x: x\n      };\n      let code = math.compile(this.state.equation); //ทำการกระจายสมการ\n\n      return code.eval(scope); //เอาค่าไปแทนในสมการแล้วรีเทิร์น\n    };\n\n    var err = (x0, x1) => {\n      return Math.abs((x1 - x0) / x1) * 100;\n    }; //ฟังก์ชันย่อยหาเออเร่อ\n\n\n    var arr;\n    var data = {\n      x: 0,\n      xnew: 0,\n      err: \"\",\n      count: 1\n    }; //ให้ดาต้าเริ่มต้นเป็น 0 ทั้งหมด\n\n    var t = true;\n    data.x0 = parseFloat(this.state.x0); //ให้ xl ในดาต้าเท่ากับ xl ที่รับเข้ามาตอนกรอก\n\n    while (t) {\n      data.xnew = func(data.x0);\n      data.err = err(data.x0, data.xnew); //หาเออเร่อ\n\n      arr = this.state.Arr; //ให้ตัวแปร arr เท่ากับอาเรย์\n\n      arr.push({\n        x0: data.x0,\n        err: data.err,\n        count: data.count\n      }); //ใส่ค่าใน arr เป็นค่าที่ใช้ไปแสดง\n\n      if (func(data.xnew) === 0 || data.count === 15) {\n        //เช็คว่าถ้า fxm = 0 หรือ ทำครบ 15 รอบแล้ว ให้ t เป็น false\n        t = false;\n      }\n\n      data.count++;\n      data.x0 = data.xnew;\n    }\n\n    for (let i = this.state.x0; i <= this.state.xnew; i++) {\n      X.push(i);\n      Y.push(func(i));\n    }\n  }\n\n  render() {\n    const DataRow = props => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, props.data.count), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, props.data.x0), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, props.data.err));\n    }; //ประกาศให้ DataRow เก็บค่าที่จะแสดงในตารางเอาไว้ แล้วส่งไปเมื่อมีคนเรียกใช้\n\n\n    let rows = this.state.Arr.map(x => {\n      return React.createElement(DataRow, {\n        key: x.count,\n        data: x,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"F\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"CRAMER'S RULE\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Enter number of variable:\"), React.createElement(\"input\", {\n      name: \"variable\",\n      type: \"text\",\n      value: this.state.variable,\n      onChange: this.handleChange,\n      placeholder: \"Enter number of variable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"X[0] :\"), React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), this.state.submitted ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"T\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Iteration\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"X \"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Error\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, rows))))), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      Data: this.state.Arr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Plot, {\n      data: [{\n        x: X,\n        y: Y,\n        type: 'scatter'\n      }],\n      latout: {\n        width: 500,\n        height: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Cramer;","map":{"version":3,"sources":["/Users/nadol/Desktop/reactjs/my-app/src/Cramer.js"],"names":["React","Component","Header","Sidebar","math","Plot","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","X","Y","Cramer","constructor","props","state","Arr","variable","submitted","handleSubmit","bind","handleChange","CramerMethod","event","setState","target","name","value","str","c","i","length","x0","preventDefault","func","x","scope","code","compile","equation","eval","err","x1","Math","abs","arr","data","xnew","count","t","parseFloat","push","render","DataRow","rows","map","y","type","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport * as math from 'mathjs';\nimport Plot from 'react-plotly.js';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nvar X,Y;\nclass Cramer extends React.Component {\n    constructor(props) {\n        super(props);\n        X=[];\n        Y=[];\n        this.state={Arr:[],variable:\"\",submitted:true}; //ประกาศตัวแปร xl xr และ equation\n        this.handleSubmit = this.handleSubmit.bind(this); //ประกาศฟังก์ชัน handleSubmit\n        this.handleChange = this.handleChange.bind(this); //ประกาศฟังก์ชัน handleChange\n        this.CramerMethod=this.CramerMethod.bind(this); //ประกาศฟังก์ชัน CramerMethod\n    }\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value}); //ทำการเซตค่า xl xr equation ใหม่ให้เป็นไปตามที่ผู้ใช้กรอก\n        this.setState({submitted:true});\n        this.setState({Arr:[]});\n    }\n    handleSubmit(event) {\n        let str=this.state.variable; //ให้ str = equation (สมการที่รับมา)\n        let c=0;\n        for(let i=0;i<str.length;i++){ //เข้าลูปเช็คว่ามี x หรือ X หรือไม่ (ดูว่าที่กรอกมาเป็นสมการหรือเปล่า)\n          if(str[i]===\"x\"||str[i]===\"X\"){\n            c++;\n          }\n        }\n        if((str.length!==0)&&(c!==0)&&this.state.submitted&&this.state.x0!==\"\"){ //เช็คความยาวสมการต้องไม่เท่ากับ 0 และ c ที่เช็ค x ต้องไม่เท่ากับ 0 และ xl ต้องไม่ใช่ค่าว่าง\n          this.CramerMethod(); //ส่งไปที่ฟังก์ชัน CramerMethod\n          this.setState({submitted:false});\n        }\n        event.preventDefault();\n      }\n      CramerMethod(event){\n        X=[];\n        Y=[];\n          var func=(x)=>{ //ฟังก์ชันย่อยรับค่ามาแล้วส่งไปแทนในสมการ\n              let scope={x:x}\n              let code=math.compile(this.state.equation); //ทำการกระจายสมการ\n              return code.eval(scope); //เอาค่าไปแทนในสมการแล้วรีเทิร์น\n            };\n          var err=(x0,x1)=>{return Math.abs((x1-x0)/x1)*100}; //ฟังก์ชันย่อยหาเออเร่อ\n          var arr;\n          var data={x:0,xnew:0,err:\"\",count:1}; //ให้ดาต้าเริ่มต้นเป็น 0 ทั้งหมด\n          var t=true;\n          data.x0=parseFloat(this.state.x0); //ให้ xl ในดาต้าเท่ากับ xl ที่รับเข้ามาตอนกรอก\n\n          while(t){\n            data.xnew=func(data.x0);\n            data.err=err(data.x0,data.xnew); //หาเออเร่อ\n\n            arr=this.state.Arr; //ให้ตัวแปร arr เท่ากับอาเรย์\n            arr.push({x0:data.x0,err:data.err,count:data.count}); //ใส่ค่าใน arr เป็นค่าที่ใช้ไปแสดง\n            if(func(data.xnew)===0||data.count===15){ //เช็คว่าถ้า fxm = 0 หรือ ทำครบ 15 รอบแล้ว ให้ t เป็น false\n              t=false;\n            }\n            data.count++;\n            data.x0=data.xnew;\n          }\n          for(let i=this.state.x0;i<=this.state.xnew;i++){\n            X.push(i);\n            Y.push(func(i));\n          }\n    }\n\n    render() {\n        const DataRow=(props)=>{return (<tr><td>{props.data.count}</td> \n                                            <td>{props.data.x0}</td>\n                                            <td>{props.data.err}</td></tr>);}\n                                            //ประกาศให้ DataRow เก็บค่าที่จะแสดงในตารางเอาไว้ แล้วส่งไปเมื่อมีคนเรียกใช้\n        let rows=this.state.Arr.map(x =>{return <DataRow key={x.count} data={x}/>}); \n        return (\n            <div>\n                <Header/>\n                <Sidebar />\n                <div className=\"content\">\n                <form id=\"F\" onSubmit={this.handleSubmit}>\n                    <h1>CRAMER'S RULE</h1><br></br>\n                        <h3>Enter number of variable:</h3>\n                        <input name=\"variable\" type=\"text\" value={this.state.variable} onChange={this.handleChange} placeholder=\"Enter number of variable\"></input><br></br>\n                        <h3>X[0] :</h3>\n                        <button type=\"submit\" value=\"Submit\">Submit</button><br></br><br></br><br></br><br></br>\n                </form>\n\n                        {(this.state.submitted)\n                        ? <div></div>\n                        : <div><div id=\"T\">\n                            <center><table>\n                            <thead>\n                              <tr><th>Iteration</th>\n                                  <th>X </th>\n                                  <th>Error</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {rows}\n                            </tbody>\n                        </table></center>\n                        </div>\n                        </div>\n                        \n                        }\n\n                        <center><div id=\"C\">\n                        <LineChart Data={this.state.Arr}/>\n                        <div>\n                            <Plot\n                                data={[\n                                    {\n                                        x:X,\n                                        y:Y,\n                                        type:'scatter'\n                                    }\n                                ]}\n                                latout={{width:500,height:300}}\n                            />\n                        </div>\n                        </div></center>\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default Cramer;"]},"metadata":{},"sourceType":"module"}